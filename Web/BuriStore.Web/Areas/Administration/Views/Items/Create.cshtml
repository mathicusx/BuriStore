@model BuriStore.Web.ViewModels.Items.CreateItemInputModel

@{
    this.ViewData["Title"] = "Add New Item";
    var categoryItems = this.Model.CategoriesItems.Select(x => new SelectListItem(x.Value, x.Key));
}

<h1>@this.ViewData["Title"]</h1>

<form method="post" class="col-md-6 offset-3">

    <div asp-validation-summary="All" class=text-danger></div>
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class=text-danger></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control" rows="5"></textarea>
        <span asp-validation-for="Description" class=text-danger></span>
    </div>
    <div class="form-group">
        <label asp-for="CategoryId"></label>
        <select asp-for="CategoryId" class="form-control" asp-items="categoryItems"></select>
        <span asp-validation-for="CategoryId" class=text-danger></span>
    </div>
    <div id="ComponentsContainer">
        <label asp-for="Components"></label>
        <a class="btn btn-success" onclick="AddComponents()">+</a>
    </div>
    <input type="submit" class="btn btn-primary" />
</form>

@section Scripts {
    <script>
        var componentIndex = 0;
        function AddComponents() {
            console.log("AddComponents()");
            $("#ComponentsContainer").append("<div class='form-control'>Name: <input type='text' name='Components["+componentIndex+"].ComponentName' />   Type: <input type='text' name='Components["+componentIndex+"].ComponentType'/> </div>")
            componentIndex++;
        }
    </script>
}